[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codeup"
version = "1.0.2"
description = "Intelligent git workflow automation tool with AI-powered commit messages"
readme = "README.md"
requires-python = ">=3.8.1"
license = {text = "MIT"}
authors = [
    {name = "Zach Vorhies", email = "zach@zachvorhies.com"}
]
keywords = ["git", "ai", "commit", "automation", "workflow"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "appdirs>=1.4.4",
    "keyring>=24.0.0",
    "semi_secret>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/zackees/codeup"
Repository = "https://github.com/zackees/codeup"
Issues = "https://github.com/zackees/codeup/issues"
Documentation = "https://github.com/zackees/codeup#readme"

[project.scripts]
codeup = "codeup.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
remove_redundant_aliases = true
float_to_top = true


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--verbose --tb=short"
markers = [
    "unit: unit tests (fast)",
    "integration: integration tests (slow)",
    "ai: tests that use AI APIs"
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]
unfixable = []


[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["B018"] # useless expression in tests is ok

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.8"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false